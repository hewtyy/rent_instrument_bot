"""Keyboard builders."""
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, ReplyKeyboardMarkup, KeyboardButton
from utils import format_remaining_time


def build_main_menu() -> ReplyKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é."""
    return ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="üìã –°–ø–∏—Å–æ–∫ –∞—Ä–µ–Ω–¥"), KeyboardButton(text="üìä –û—Ç—á—ë—Ç —Å–µ–π—á–∞—Å")],
            [KeyboardButton(text="üìÖ –û—Ç—á—ë—Ç –ø–æ –¥–∞—Ç–µ"), KeyboardButton(text="üìö –ö–∞—Ç–∞–ª–æ–≥")],
            [KeyboardButton(text="‚¨ÜÔ∏è –ò–º–ø–æ—Ä—Ç CSV"), KeyboardButton(text="üíµ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ü–µ–Ω—É")],
        ],
        resize_keyboard=True,
    )


def build_rentals_list_kb(rows: list[dict]) -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å–ø–∏—Å–∫–∞ –∞—Ä–µ–Ω–¥."""
    buttons = []
    for r in rows:
        left = format_remaining_time(int(r["start_time"]))
        buttons.append([InlineKeyboardButton(text=f"{r['tool_name']} ‚Äî {left}", callback_data=f"rental_open:{r['id']}")])
    buttons.append([InlineKeyboardButton(text="–û–±–Ω–æ–≤–∏—Ç—å", callback_data="rentals_refresh")])
    buttons.append([InlineKeyboardButton(text="‚Ü©Ô∏è –í –º–µ–Ω—é", callback_data="back_menu")])
    return InlineKeyboardMarkup(inline_keyboard=buttons)


def build_rental_menu_kb(rental_id: int) -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –º–µ–Ω—é –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –∞—Ä–µ–Ω–¥—ã."""
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚úÖ –ü—Ä–æ–¥–ª–∏—Ç—å –Ω–∞ 24—á", callback_data=f"rental_renew:{rental_id}")],
        [InlineKeyboardButton(text="üîí –ó–∞–≤–µ—Ä—à–∏—Ç—å —Å–µ–π—á–∞—Å", callback_data=f"rental_close:{rental_id}")],
        [InlineKeyboardButton(text="‚Ü©Ô∏è –ö —Å–ø–∏—Å–∫—É", callback_data="rentals_list")],
    ])


def build_tools_list_kb(items: list[dict]) -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å–ø–∏—Å–∫–∞ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤."""
    rows = []
    for it in items:
        rows.append([InlineKeyboardButton(text=f"{it['name']} ({it['price']}‚ÇΩ)", callback_data=f"tool_open:{it['id']}")])
    rows.append([InlineKeyboardButton(text="‚Ü©Ô∏è –ù–∞–∑–∞–¥", callback_data="back_menu")])
    return InlineKeyboardMarkup(inline_keyboard=rows)


def build_tool_menu_kb(tool_id: int) -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –º–µ–Ω—é –¥–ª—è –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞."""
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ", callback_data=f"tool_do_rename:{tool_id}")],
        [InlineKeyboardButton(text="üíµ –ò–∑–º–µ–Ω–∏—Ç—å —Ü–µ–Ω—É", callback_data=f"tool_do_price:{tool_id}")],
        [InlineKeyboardButton(text="üóë –£–¥–∞–ª–∏—Ç—å", callback_data=f"tool_do_delete:{tool_id}")],
        [InlineKeyboardButton(text="‚Ü©Ô∏è –ö —Å–ø–∏—Å–∫—É", callback_data="tools_list")],
    ])


def build_expiration_keyboard(rental_id: int) -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –∏—Å—Ç–µ—á–µ–Ω–∏–∏ –∞—Ä–µ–Ω–¥—ã."""
    return InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="‚úÖ –ü—Ä–æ–¥–ª–∏—Ç—å –∞—Ä–µ–Ω–¥—É", callback_data=f"renew:{rental_id}"),
            InlineKeyboardButton(text="‚ùå –ó–∞–±—Ä–∞–ª –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç", callback_data=f"close:{rental_id}"),
        ]
    ])


def build_back_menu_kb() -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –∫–Ω–æ–ø–∫—É –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é."""
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚Ü©Ô∏è –í –º–µ–Ω—é", callback_data="back_menu")]
    ])


def build_reset_confirm_kb() -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —Å–±—Ä–æ—Å–∞ –ë–î."""
    return InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="‚ö†Ô∏è –î–∞, –æ—á–∏—Å—Ç–∏—Ç—å –≤—Å—ë", callback_data="reset_db_confirm"),
            InlineKeyboardButton(text="–û—Ç–º–µ–Ω–∞", callback_data="back_menu"),
        ]
    ])
